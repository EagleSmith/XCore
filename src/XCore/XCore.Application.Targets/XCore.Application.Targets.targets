<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!--
    Defines msbuild tasks on a Bundle package to copy all modules assets (projects and packages) to the "Packages" folder.
  -->

  <!-- 将扩展模块的文件复制到主项目的Packages文件夹 -->
  <Target Name="CopyPackageAssets" AfterTargets="Build" Condition="'$(IgnorePackageAssets)' != 'true'">
    <Message Text="Copying package assets(复制扩展模块资源包)" Importance="high" />
    <Copy
      SourceFiles="@(PackageAssetFiles)"
      DestinationFolder="Packages\%(RecursiveDir)"
      ContinueOnError="true" />

    <ItemGroup>
      <!-- 定义扩展模块项目 -->
      <ModuleProjectReferences
        Include="@(_MSBuildProjectReferenceExistent)"
        Condition="Exists('%(RootDir)%(Directory)Module.txt') Or Exists('%(RootDir)%(Directory)obj\Module.txt') Or
                   Exists('%(RootDir)%(Directory)Theme.txt') Or Exists('%(RootDir)%(Directory)obj\Theme.txt')" />
    </ItemGroup>
    <MSBuild
      Targets="CopyPackageAssetFiles"
      BuildInParallel="$(BuildInParallel)"
      Properties="ApplicationDirectory=$(MSBuildProjectDirectory)"
      Projects="@(ModuleProjectReferences)"
      Condition="'@(ModuleProjectReferences)' != ''"
      ContinueOnError="true">
    </MSBuild>
    <!-- 将扩展模块项目中的 .cshtml 文件复制到主项目的 Packages\{模块名称}\{对应目录}内 -->
    <ItemGroup>
      <ModuleProjectRazorFiles Include="%(ModuleProjectReferences.RootDir)%(Directory)**\*.cshtml">
        <ProjectName>%(Filename)</ProjectName>
      </ModuleProjectRazorFiles>
      <ModuleProjectRazorFilesMapping
        Include="%(ModuleProjectRazorFiles.FullPath)|\Packages\%(ModuleProjectRazorFiles.ProjectName)\%(RecursiveDir)%(Filename)%(Extension)">
      </ModuleProjectRazorFilesMapping>
    </ItemGroup>
    <Message Text="Generating module project razor files mapping file(生成模块项目Razor文件的映射文件)"
      Condition="'@(ModuleProjectRazorFiles)' != ''" Importance="high" />
    <!-- WriteLinesToFile 任务 https://msdn.microsoft.com/zh-cn/library/ms164305(v=VS.80).aspx -->
    <WriteLinesToFile
      File="obj\ModuleProjectRazorFiles.map"
      Lines="@(ModuleProjectRazorFilesMapping)"
      Condition="'@(ModuleProjectRazorFiles)' != ''"
      Overwrite="true"
      Encoding="utf-8"
      ContinueOnError="true" />
    

    <!-- 将扩展模块 Content 文件夹内的文件复制到主项目的 Packages\{模块名称}\Content 内 -->
    <ItemGroup>
      <ModuleProjectContentFiles Include="%(ModuleProjectReferences.RootDir)%(Directory)Content\**\*">
        <ProjectName>%(Filename)</ProjectName>
      </ModuleProjectContentFiles>
      <ModuleProjectContentFilesMapping
        Include="%(ModuleProjectContentFiles.FullPath)|\Packages\%(ModuleProjectContentFiles.ProjectName)\Content\%(RecursiveDir)%(Filename)%(Extension)">
      </ModuleProjectContentFilesMapping>
    </ItemGroup>
    <Message Text="Generating module project content files mapping file(生成模块项目内容文件的映射文件)"
      Condition="'@(ModuleProjectContentFiles)' != ''" Importance="high" />
    <WriteLinesToFile
      File="obj\ModuleProjectContentFiles.map"
      Lines="@(ModuleProjectContentFilesMapping)"
      Condition="'@(ModuleProjectContentFiles)' != ''"
      Overwrite="true"
      Encoding="utf-8"
      ContinueOnError="true" />

    <!-- 将扩展模块项目中的 .liquid 文件复制到主项目的 Packages\{模块名称}\{对应目录}内 -->
    <ItemGroup>
      <ModuleProjectLiquidFiles Include="%(ModuleProjectReferences.RootDir)%(Directory)**\*.liquid">
        <ProjectName>%(Filename)</ProjectName>
      </ModuleProjectLiquidFiles>
      <ModuleProjectLiquidFilesMapping
        Include="%(ModuleProjectLiquidFiles.FullPath)|\Packages\%(ModuleProjectLiquidFiles.ProjectName)\%(RecursiveDir)%(Filename)%(Extension)">
      </ModuleProjectLiquidFilesMapping>
    </ItemGroup>
    <Message Text="Generating module project liquid files mapping file(生成模板项目liquid文件的映射文件)"
      Condition="'@(ModuleProjectLiquidFiles)' != ''" Importance="high" />
    <WriteLinesToFile
      File="obj\ModuleProjectLiquidFiles.map"
      Lines="@(ModuleProjectLiquidFilesMapping)"
      Condition="'@(ModuleProjectLiquidFiles)' != ''"
      Overwrite="true"
      Encoding="utf-8"
      ContinueOnError="true" />

    <CreateItem Include="@(Content)" Condition="'%(Extension)'=='.cshtml'">
      <Output TaskParameter="Include" ItemName="MvcContentRazorFiles"/>
    </CreateItem>
    <ItemGroup Condition="'@(MvcRazorFilesToCompile)' == ''">
      <MvcRazorFilesToCompile Include="@(MvcContentRazorFiles);Packages\**\*.cshtml" />
    </ItemGroup>
  </Target>

  <!-- 清理扩展模块目录和资产文件 -->
  <Target Name="CleanPackageAssets" AfterTargets="Clean" Condition="'$(IgnorePackageAssets)' != 'true' And Exists('Packages')">
    <ItemGroup>
      <AllPackageAssetFiles Include="Packages\**" />
    </ItemGroup>
    <Delete
      Files="@(AllPackageAssetFiles)"
      ContinueOnError="true" />
    <RemoveDir
      Directories="Packages\%(AllPackageAssetFiles.RecursiveDir)"
      ContinueOnError="true" />
  </Target>

  <!--
    Defines msbuild props and items on a Bundle package to publish all modules assets (projects and packages).
  -->

  <PropertyGroup>
    <!-- https://github.com/aspnet/MvcPrecompilation -->
    <MvcRazorExcludeViewFilesFromPublish>false</MvcRazorExcludeViewFilesFromPublish>
  </PropertyGroup>

  <ItemGroup>
    <Compile Remove="Packages\**" />
    <Content Remove="Packages\**" />
    <EmbeddedResource Remove="Packages\**" />
    <None Remove="Packages\**" />
  </ItemGroup>

  <ItemGroup>
    <ResolvedFileToPublish Include="Packages\**">
      <RelativePath>Packages\%(RecursiveDir)%(Filename)%(Extension)</RelativePath>
    </ResolvedFileToPublish>
  </ItemGroup>

</Project>